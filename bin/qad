#!/bin/sh

dashless=$(basename "$0" | sed -e 's/-/ /')
USAGE="USAGE: $dashless [--commit <message>] [--user <user>] <branch>"

usage() 
{
  echo "$USAGE"
  exit 1
}

echo_stage()
{
  echo "== \033[1;37m$1\033[0m =="
}

while test $# -ne 0
do
  case "$1" in
  --commit)
    case "$2" in '') usage ;; esac
    commit_message="$2"
    shift
    ;;
  --commit=*)
    commit_message="$1"
    shift
    ;;
  --user)
    case "$2" in '') usage ;; esac
    user="-u $2"
    shift
    ;;
  -u)
    case "$2" in '') usage ;; esac
    user="-u $2"
    shift
    ;;
  --)
    shift
    break
    ;;
  -*)
    usage
    ;;
  *)
    break
    ;;
  esac
  shift
done

branch_name=$1
upstream_url=$(git config remote.upstream.url) 

if test "$upstream_url" != "git@github.com:phpfog/phpfog.git" ; then
  echo "$dashless only works with the phpfog repo"
  usage
fi

if test -z "$branch_name"; then
  usage
fi

echo_stage "Checking out $branch_name"
git checkout "$branch_name" || exit 1

echo_stage "Checking uncommitted changes in $branch_name"
git diff-index --quiet HEAD
ec=$?
if [[ $ec != 0 ]] ; then
  if ! test -z "$commit_message"; then
    git add .
    git add -u
    git commit -m "\"$commit_message\""
  else
    echo "There are uncommitted changes in branch: $branch_name"
    echo "Cannot deploy!"
    exit $ec
  fi
fi

echo_stage "Checking out QA"
git checkout qa || exit 1

echo_stage "Fetching Upstream"
git fetch upstream || exit 1

echo_stage "Merging Upstream QA"
git merge upstream/qa || exit 1

echo_stage "Mering $branch_name"
git merge "$branch_name" || exit 1

echo_stage "Pushing to Upstream QA"
git push upstream qa || exit 1

echo_stage "Deploying to QA"
fab $user -f deploy/fabfile.py deploy

echo_stage "Checking out $branch_name"
git checkout "$branch_name"
